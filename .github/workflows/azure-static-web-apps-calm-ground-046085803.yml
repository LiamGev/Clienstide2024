# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy frontend and backend app to Azure

on:
    push:
        branches:
            - main
    workflow_dispatch:
env:
  ACTIONS_STEP_DEBUG: true


jobs:
    build:
        runs-on: ubuntu-latest
        name: Build and zip apps from /dist
        steps:
            - uses: actions/checkout@v4
              with:
                path: .

            - name: Set up Node.js version
              uses: actions/setup-node@v4
              with:
                  node-version: '18.x'

            - name: npm install, build, and test
              run: |
                  npm install
                  npx nx run Clientside:build:production
                  npx nx run data-api:build

            - name: Zip artifacts for deployment
              run: |
                  echo ${GITHUB_WORKSPACE}
                  cd ${GITHUB_WORKSPACE}/dist/apps/data-api/ && zip ${GITHUB_WORKSPACE}/data-api-release.zip ./* -r
                  cd ${GITHUB_WORKSPACE}/dist/apps/Clientside/ && zip ${GITHUB_WORKSPACE}/Clientside-release.zip ./* -r

            - name: Debug Toon inhoud van data-api build folder
              run: |
                echo "üìÅ Inhoud van dist/apps/data-api:"
                ls -la dist/apps/data-api

                echo "üì¶ Inhoud van data-api-release.zip:"
                unzip -l data-api-release.zip || echo "ZIP bestaat nog niet"

            - name: Upload Clientside artifact for deployment job
              uses: actions/upload-artifact@v4
              with:
                  name: Clientside
                  path: Clientside-release.zip

            - name: Upload data-api artifact for deployment job
              uses: actions/upload-artifact@v4
              with:
                  name: data-api
                  path: data-api-release.zip

    deploy-my-app:
        runs-on: ubuntu-latest
        name: Deploy Angular Frontend
        needs: build
        environment:
            name: 'Production'

        steps:
            - name: Download artifact from build job
              uses: actions/download-artifact@v4
              with:
                  name: Clientside

            - name: Unzip artifact for deployment
              run: unzip Clientside-release.zip

            - name: Deploy to static azure web app
              id: builddeploy
              uses: Azure/static-web-apps-deploy@v1
              with:
                  azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_CALM_GROUND_046085803 }}
                  repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
                  action: 'upload'
                  app_location: 'browser' # App source code path
                  api_location: '' # Api source code path - optional
                  output_location: '' # Built app content directory - optional
                  github_id_token: ${{ steps.idtoken.outputs.result }}
                  skip_app_build: true

    deploy-data-api:
        runs-on: ubuntu-latest
        name: Deploy NestJs data-api backend
        needs: build
        environment:
            name: 'Production'
            url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

        steps:
            - name: Download artifact from build job
              uses: actions/download-artifact@v4
              with:
                  name: data-api

            - name: Unzip artifact for deployment
              run: unzip data-api-release.zip
            
            - name: Toon inhoud van map na unzip
              run: ls -la

            - name: Install dependencies
              run: npm install

            - name: 'Deploy to Azure Web App'
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v3
              with:
                  app-name: 'CSideApp'
                  slot-name: 'Production'
                  publish-profile: ${{ secrets.NESTJS_PUBLISHPROFILE }}
                  package: .